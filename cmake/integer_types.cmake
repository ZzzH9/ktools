include(CheckTypeSize)

check_type_size(int32_t INT32_T)
if(NOT HAVE_INT32_T)
  set(int32_t "int")
endif(NOT HAVE_INT32_T)
#
check_type_size(int64_t INT64_T)
if(NOT HAVE_INT64_T)
  if(WIN32)
    set(int64_t __int64)
  endif(WIN32)
endif(NOT HAVE_INT64_T)
#
check_type_size(intmax_t INTMAX_T)
if(NOT HAVE_INTMAX_T)
  set(intmax_t "int64_t")
endif(NOT HAVE_INTMAX_T)
#
check_type_size(size_t SIZE_T)
if(NOT HAVE_SIZE_T)
  if("${CMAKE_SIZEOF_VOID_P}" EQUAL 8)
    set(size_t "uint64_t")
  else("${CMAKE_SIZEOF_VOID_P}" EQUAL 8)
    set(size_t "uint32_t")
  endif("${CMAKE_SIZEOF_VOID_P}" EQUAL 8)
endif(NOT HAVE_SIZE_T)
#
check_type_size(ssize_t SSIZE_T)
if(NOT HAVE_SSIZE_T)
  if("${CMAKE_SIZEOF_VOID_P}" EQUAL 8)
    set(ssize_t "int64_t")
  else("${CMAKE_SIZEOF_VOID_P}" EQUAL 8)
    set(ssize_t "long")
  endif("${CMAKE_SIZEOF_VOID_P}" EQUAL 8)
endif(NOT HAVE_SSIZE_T)
#
check_type_size(uint16_t UINT16_T)
if(NOT HAVE_UINT16_T)
  set(uint16_t "unsigned short")
endif(NOT HAVE_UINT16_T)
#
check_type_size(uint32_t UINT32_T)
if(NOT HAVE_UINT32_T)
  set(uint32_t "unsigned int")
endif(NOT HAVE_UINT32_T)
#
check_type_size(uint64_t UINT64_T)
if(NOT HAVE_UINT64_T)
  if(WIN32)
    set(uint64_t "unsigned __int64")
  endif(WIN32)
endif(NOT HAVE_UINT64_T)
#
check_type_size(uintmax_t UINTMAX_T)
if(NOT HAVE_UINTMAX_T)
  set(uintmax_t "uint64_t")
endif(NOT HAVE_UINTMAX_T)
#
check_type_size(intptr_t INTPTR_T)
if(NOT HAVE_INTPTR_T)
  if("${CMAKE_SIZEOF_VOID_P}" EQUAL 8)
    set(intptr_t "int64_t")
  else()
    set(intptr_t "int32_t")
  endif()
endif(NOT HAVE_INTPTR_T)
#
check_type_size(uintptr_t UINTPTR_T)
if(NOT HAVE_UINTPTR_T)
  if("${CMAKE_SIZEOF_VOID_P}" EQUAL 8)
    set(uintptr_t "uint64_t")
  else()
    set(uintptr_t "uint32_t")
  endif()
endif(NOT HAVE_UINTPTR_T)
